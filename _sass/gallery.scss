$scaledown: .8;
$scaleup: 1.2;
$rotaterange: 5;
$columncount: 4;

.gallery {
 line-height: 0;
 margin: $gap3 0;
 column-gap: 0px;

 -moz-column-count: $columncount;
 -webkit-column-count: $columncount;
 column-count: $columncount;

 @media (max-width: $screen-medium) {
  -moz-column-count: ($columncount - 1);
  -webkit-column-count: ($columncount - 1);
  column-count: ($columncount - 1); 
}
@media (max-width: $screen-small) {
  -moz-column-count: ($columncount - 2);
  -webkit-column-count: ($columncount - 2);
  column-count: ($columncount - 2); 
}
visibility: hidden; 
/* Prevents :hover from triggering in the gaps between items */

&:hover > img { 
  opacity: 0.6; 
  /* different times so its diff numbers per each, each time. i know. */
  &:nth-of-type(1):not(:hover) {
   transform: rotate(#{randomNum(-$rotaterange, $rotaterange)}deg) scale($scaledown);
 }
 &:nth-of-type(2):not(:hover) {
   transform: rotate(#{randomNum(-$rotaterange, $rotaterange)}deg) scale($scaledown);
 }  
 &:nth-of-type(3):not(:hover) {
   transform: rotate(#{randomNum(-$rotaterange, $rotaterange)}deg) scale($scaledown);
 }
 &:nth-of-type(4):not(:hover) {
   transform: rotate(#{randomNum(-$rotaterange, $rotaterange)}deg) scale($scaledown);
 }
 &:nth-of-type(5):not(:hover) {
   transform: rotate(#{randomNum(-$rotaterange, $rotaterange)}deg) scale($scaledown);
 }
 &:nth-of-type(6):not(:hover) {
   transform: rotate(#{randomNum(-$rotaterange, $rotaterange)}deg) scale($scaledown);
 }
 &:nth-of-type(7):not(:hover) {
   transform: rotate(#{randomNum(-$rotaterange, $rotaterange)}deg) scale($scaledown);
 }
 &:nth-of-type(8):not(:hover) {
   transform: rotate(#{randomNum(-$rotaterange, $rotaterange)}deg) scale($scaledown);
 }
 &:nth-of-type(9):not(:hover) {
   transform: rotate(#{randomNum(-$rotaterange, $rotaterange)}deg) scale($scaledown);
 }
}

& > img {
  width: 100% !important;
  height: auto !important;
  border: solid 0px white;
  @include transition;
  cursor: pointer;
  visibility: visible; 
  /* Brings the child items back in, even though the parent is `hidden` */
  @include shadow(box, 0 4px 0px rgba(0, 0, 0, 0));
  &:hover {
    @include shadow(box, 0 5px 10px rgba(black, .3));
    opacity: 1; 
    border: solid 10px white;
    transform: scale($scaleup);
    z-index: 1000; 
  }
}
}





